Create React App(CRA)
- Vite
HMR (Hot Module Replacement)

HTML + JS = JSX
Babel - JavaScript compiler
Difference between CRA and Vite Example


import { useState } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'

function App() {
  const [count, setCount] = useState(0)
  const name="Sushmita"
  const age=23

  return (
    <>
<h1>Hello {name}</h1>
<p>I am sweet {age}.</p>
<p>{23+12}</p> //React is powerful
    </>
  )
}

export default App

<> and <React.Fragment> is same

 //doesnot support more than one child we need parent in React

Day 11 - MERN Stack (02/07/2025)

Explanation of React Basic Code
Component, Props
Routing in React (react-router-dom)
Why React? - Component based library
racfe = react arrow component function export



Day 12 - MERN Stack (02/09/2025)

Routing
Hooks - Function that React developer has written ( useState, useContext, useReducer and useEffect)



Day 13 - MERN Stack (02/10/2025)

useEffect types : 
a) Name Arrow function 
const hello = () =>{

}
b) Anonymous function 
()=> {

}
c) Regular function
function hello(){

}

[] : Dependency Array




WHEN useEffect IS CALLED

Examples

//first type
import { useEffect } from "react"


function App() { 
//first type
useEffect(() =>{  //useEffect is a hook
console.log("UseEffect was called") 
},[])  //[] : Dependency Array

  return (
<>
<h1>Learning UseEffect</h1>
</>
    
  )
}

export default App

//useEffect is used to bring external thing 
//if you want to trigger any function then you can use useEffect


//second type
import { useEffect, useState } from "react"


function App() { 
  const[count, setCount] = useState(0)
//first type
useEffect(() =>{  //useEffect is a hook
console.log("First UseEffect was called") 
},[])  //[] : Dependency Array



//second type
useEffect (() =>{
 document.title ="Learning UseEffect" +count
}, [count])

  return (
<>
<h1>{count}</h1>
<button onClick={()=>setCount(count+1)}>+</button>
</>
    
  )
}

export default App



//third function


import { useEffect, useState } from "react"


function App() { 
  const[count, setCount] = useState(0)
  const[nextCount, setnextCount] = useState(0)


  useEffect(()=>{
    console.log("This useEffect was called")
  })
  return (
<>
<h1>{count}</h1>
<button onClick={()=>setCount(count+1)}>+</button>
<h1>{nextCount}</h1>
<button onClick={()=>setnextCount(nextCount+1)}>+</button>
</>
    
  )
}

export default App

//throw reindeer





Day 14 - MERN Stack (02/11/2025)

Introduction to Tailwind (Utility Class)
Example in Tailwind Play Ground
React Project New


